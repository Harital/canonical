// Code generated by mockery v1.0.0. DO NOT EDIT.

package osInterface

import fs "io/fs"
import mock "github.com/stretchr/testify/mock"
import os "os"

// MockOsInterface is an autogenerated mock type for the OsInterface type
type MockOsInterface struct {
	mock.Mock
}

// OpenFile provides a mock function with given fields: filePath, flag, perm
func (_m *MockOsInterface) OpenFile(filePath string, flag int, perm fs.FileMode) (*os.File, error) {
	ret := _m.Called(filePath, flag, perm)

	var r0 *os.File
	if rf, ok := ret.Get(0).(func(string, int, fs.FileMode) *os.File); ok {
		r0 = rf(filePath, flag, perm)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*os.File)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, int, fs.FileMode) error); ok {
		r1 = rf(filePath, flag, perm)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Remove provides a mock function with given fields: filepath
func (_m *MockOsInterface) Remove(filepath string) error {
	ret := _m.Called(filepath)

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(filepath)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
